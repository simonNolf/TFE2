name: Deploy test to VPS

on:
  push:
    branches:
      - dev-main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.KEY_SSH }}
      VPS_USER: ${{ secrets.VPS_USER }}
      VPS_IP: ${{ secrets.VPS_IP }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create .ssh directory and known_hosts file
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts

    - name: Update known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.KEY_SSH }}

    - name: Create .env file for backend
      run: |
        echo "PGHOST=${{ secrets.PGHOST }}" > ./backend/.env
        echo "PGUSER=${{ secrets.PGUSER }}" >> ./backend/.env
        echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> ./backend/.env
        echo "PGPORT=${{ secrets.PGPORT }}" >> ./backend/.env
        echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> ./backend/.env
        echo "" >> ./backend/.env
        echo "API_URL=${{ secrets.API_URL }}" >> ./backend/.env
        echo "MAIL=${{ secrets.MAIL }}" >> ./backend/.env
        echo "MDP=${{ secrets.MDP }}" >> ./backend/.env

    - name: Create .env file for frontend
      run: |
        echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > ./frontend/.env

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io docker-compose

    - name: Create Docker network
      run: |
        docker network create my_network

    - name: Deploy to VPS
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} /bin/bash << 'EOF'
          cd test/TFE2
          git pull
          docker-compose down
          docker-compose up -d --build
        EOF
